!!! 5
%html
	%head
		%title Event/ Miner/ Results

	%body
		%div
			%form{:action => "/url", :method => "GET"}
				%label
					Enter url:
					%br
						%input#url-input{:type => "text", :name => "url[address]", :placeholder => "http://www.spot.it", :value => @url}
				%input#url-get-button{:type => "submit", :value => "Get"}
				%br
				%div{:style => "width: 400px; display: inline-block"}
					%label
						%strong Count the number of words that match filters:
						%br
						Format is "FilterType:ThingToCompareTo", without quotes.
						%br
						Filters separated by newline.
						%br
						%textarea#filters-input{:name => "filters[matchers]", :rows => 10, :style => "width: 400px;"}
							= @filters_input

				%div{:style => "width: 400px; display: inline-block"}
					%p
						Fetched words are downcased, so it's recommended you provide everything in small caps.
					%ul
						%li
							%strong within_url
							Accepts string or regexp; checks to see if the given URL path contains the given STRING or REGEXP
						%li
							%strong regexp
							Accepts regexp; compares words found using a regular expression
						%li
							%strong word
							Accepts string; compares words with given string
						%li
							%strong has_type
							Compares word against a predetermined set. Presets include:
							%em day, month, time_12_hour, time_24_hour
							Ex: "has_type:day" checks to see if word is "monday/mon, tuesday/tue, ..."

				%div
					%label
						%strong Fetch me links that contain (separate terms by comma):
						%br
						%input{:type => "text", :name => "filters[links]", :value => "event,events", :value => @links_filters_input}

		%hr

		#matches-found
			= "<strong>#{(@results[:matches_found][:total_matches] || 0)}</strong> matches found from #{(@results[:matches_found][:total_filters] || 0)} filters (more is better):"
			%ul
				- @results[:matches_found].each do |filter_name, match_count|
					- next if filter_name == :total_matches
					%li
						%strong
							- count_str = match_count.to_s
							= count_str + ("&nbsp;" * (5 - count_str.length))
						= filter_name

		#words-found
			Words found:
			%p
				= @results[:words].join(" &#149; ")

		%hr
		= p @results